name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [macos-latest, windows-latest, ubuntu-latest]
        #os: [macos-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node gyp
        run: npm install -g node-gyp@latest

      - name: Set electron-builder debug env variable
        run: set DEBUG=electron-builder

      - name: Prepare for app notarization
        if: startsWith(matrix.os, 'macos')
        # Import Apple API key for app notarization on macOS
        run: |
          mkdir -p ~/private_keys/
          echo '${{ secrets.api_key }}' > ~/private_keys/AuthKey_${{ secrets.api_key_id }}.p8
      - name: Electron Builder Action
        uses: OpenBuilds/action-electron-build@v1.8.0
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}
          windows_certs: ${{ secrets.WIN_CSC_LINK }}
          windows_certs_password: ${{ secrets.WIN_CSC_PASSWORD }}
          mac_certs: ${{ secrets.mac_certs }}
          mac_certs_password: ${{ secrets.mac_certs_password }}
          release: true
          debugElectron: true
          # release: ${{ startsWith(github.ref, 'refs/tags/v') }}

        env:
          # macOS notarization API key
          API_KEY_ID: ${{ secrets.api_key_id }}
          API_KEY_ISSUER_ID: ${{ secrets.api_key_issuer_id }}
